// VARIABLES
$color-black: #000000;
$color-red: #ff0000;
$fuente-normal: Verdana;
$fuente-titulo: Helvetica;


h1 {
  color: $color-black;
  background-color: $color-red;
  font-family: $fuente-titulo;
}

// ORDENAR LAS VARIABLES EN UN ARRAY

$colores: (
  "black": #000000,
  "red": #ff0000,
  "blue": #0000ff,
  "green": #00ff00,
  "normal": Verdana,
  "white": #ffffff,
);

h1{
    p{
        color: map-get($colores, "green");
        background-color: map-get($colores , "blue");
        font-family: map-get($colores , "normal");
    }
}

//FUNCIONES O MEJOR DICHO MIXINS

//MIXIN SIN ARGUMENTOS

@mixin primerMixin(){
    color: #000000;
    background-color: map-get($colores , "green");
    font-family: Verdana;
}

body{
    @include primerMixin();
}

//MIXIN SIN PARENTESIS, SE UTILIZA CUANDO NO SE NECESITA ARGUMENTOS EN EL MIXIN.

@mixin segundoMixin{
    color: #000000;
    background-color: map-get($colores , "green");
    font-family: Verdana;
}

//MIXIN CON ARGUMENTOS

@mixin tercerMixin($argumento1){
    color: $argumento1;
}

//MIXIN CON VARIOS ARGUMENTOS

@mixin cuartoMixin($argumento1, $argumento2){
    color: $argumento1;
    background-color: $argumento2;
}

//MIXIN CON ARGUMENTOS POR DEFECTO

@mixin quintoMixin($argumento1: #000000, $argumento2: #ff0000){
    color: $argumento1;
    background-color: $argumento2;
}

header{
    @include tercerMixin($color-red);

    nav{
        @include cuartoMixin($color-black, map-get($colores , "green"));

        ul{
            @include quintoMixin();
        }
    }
}

//MIXIN CON ARGUMENTOS POR DEFECTO Y ARGUMENTOS OPCIONALES

@mixin sextoMixin($argumento1: #000000, $argumento2: #ff0000, $argumento3: #0000ff){
    color: $argumento1;
    background-color: $argumento2;
    font-family: $argumento3;
}

header{
    @include sextoMixin($color-red, map-get($colores , "green"), Verdana);
}

//MIXIN CON ARGUMENTOS LA REGLA @CONTENT

@mixin mobile(){
    @media screen and (max-width: 400px){
        @content;
    }
}

ul{
    font-size: 3em;
    @include mobile(){
        font-size: 1em;
    }
}

//MIXINS GENERALES

@mixin flex($display: flex, $direction: row, $justify: center, $align: center, $wrap: nowrap){
    display: $display;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
}

ul{
    @include flex( $justify: space-around, $align: flex-start, $wrap: wrap);
    @include mobile(){
        @include flex($direction: column, $justify: space-around, $align: flex-start, $wrap: wrap);
    }
}

@mixin grid($display: grid, $template: 1fr 1fr 1fr, $gap: 1em, $justify: center, $align: center){
    display: $display;
    grid-template-columns: $template;
    grid-gap: $gap;
    justify-items: $justify;
    align-items: $align;

    @media screen and (max-width: 400px){
        grid-template-columns: 1fr;
        gap: 0;
    }
}

main{
    @include grid($template: 1fr 1fr 1fr, $gap: 1em, $justify: center, $align: center);
}

//MIXIN PARA RESPONSIVE DESIGN

@mixin responsive($breakpoint){
    @if $breakpoint == phone{
        @media screen and (max-width: 400px){
            @content;
        }
    } @else if $breakpoint == tablet{
        @media screen and (max-width: 768px){
            @content;
        }
    } @else if $breakpoint == desktop{
        @media screen and (max-width: 1024px){
            @content;
        }
    } @else if $breakpoint == large-desktop{
        @media screen and (max-width: 1200px){
            @content;
        }
    }
}

main{
    @include responsive(phone){
        background-color: map-get($colores , "green");
    }
    @include responsive(tablet){
        background-color: map-get($colores , "blue");
    }
    @include responsive(desktop){
        background-color: map-get($colores , "red");
    }
    @include responsive(large-desktop){
        background-color: map-get($colores , "white");
    }
}


